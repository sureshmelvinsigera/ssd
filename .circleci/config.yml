version: 2.1
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install required dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Running tests
          # Environment variables are used here to ensure that all sensitive data is kept out of the source code.
          # In addition, CircleCI also masks these variables after they are set (e.g., a variable with the value "1234" will be displayed as "***34")
          # further reducing the attack surface because the variable itself cannot be read back from CircleCI's UI. Masking is also applied to shell commands,
          # so the echo command can't be used to display a variable's true value
          command: |
            . venv/bin/activate
            echo ENGINE="${ENGINE}" >> "${BASH_ENV}"
            echo NAME="${NAME}" >> "${BASH_ENV}"
            echo USER="${USER}" >> "${BASH_ENV}"
            echo PASSWORD="${PASSWORD}" >> "${BASH_ENV}"
            echo HOST="${HOST}" >> "${BASH_ENV}"
            echo PORT="${PORT}" >> "${BASH_ENV}"
            python3 manage.py test
      - run:
          name: Linting code according to PEP 8 
          command: |
            . venv/bin/activate
            autopep8 -d -r --exit-code api/ authentication/ ssd/
      - store_artifacts:
          path: test-reports/
          destination: python_app

workflows:
  build:
    jobs:
      - build:
          context: default